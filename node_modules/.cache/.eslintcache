[{"/Users/julieserafini/Desktop/advice-generator/src/index.js":"1","/Users/julieserafini/Desktop/advice-generator/src/reportWebVitals.js":"2","/Users/julieserafini/Desktop/advice-generator/src/App.js":"3","/Users/julieserafini/Desktop/advice-generator/src/components/Generator.js":"4"},{"size":535,"mtime":1673902693324,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1673902693326,"results":"7","hashOfConfig":"6"},{"size":162,"mtime":1673903139521,"results":"8","hashOfConfig":"6"},{"size":1280,"mtime":1674579139867,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gbg2bi",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/julieserafini/Desktop/advice-generator/src/index.js",[],[],"/Users/julieserafini/Desktop/advice-generator/src/reportWebVitals.js",[],[],"/Users/julieserafini/Desktop/advice-generator/src/App.js",[],[],"/Users/julieserafini/Desktop/advice-generator/src/components/Generator.js",["22","23"],[],{"ruleId":"24","severity":1,"message":"25","line":8,"column":12,"nodeType":"26","messageId":"27","endLine":8,"endColumn":17},{"ruleId":"28","severity":1,"message":"29","line":10,"column":11,"nodeType":"30","endLine":19,"endColumn":2},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'fetchAdvice' function makes the dependencies of useEffect Hook (at line 24) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'fetchAdvice' in its own useCallback() Hook.","VariableDeclarator"]