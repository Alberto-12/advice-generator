{"ast":null,"code":"var _jsxFileName = \"/Users/julieserafini/Desktop/advice-generator/src/components/Generator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Image from '../images/icon-dice.svg';\nimport Pattern from '../images/pattern-divider-mobile.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Generator = () => {\n  _s();\n  const [advice, setAdvice] = useState(\"\");\n  const [adviceNumber, setAdviceNumber] = useState(0);\n  const fetchAdvice = async () => {\n    const response = await fetch(`https://api.adviceslip.com/advice/${adviceNumber}`);\n    const data = await response.json();\n    setAdvice(data.slip.advice);\n  };\n  useEffect(() => {\n    fetchAdvice();\n  }, [adviceNumber, fetchAdvice]);\n  useEffect(() => {\n    fetchAdvice();\n  }, []);\n  const handleClick = async () => {\n    const randomAdviceId = Math.floor(Math.random() * 401) + 1;\n    setAdviceNumber(randomAdviceId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"advice-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"advice #\", adviceNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"text\",\n      children: advice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"pattern\",\n      src: Pattern,\n      alt: \"Pattern Divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      id: \"btn\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"dice\",\n        src: Image,\n        alt: \"Icon Dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Generator, \"xFEQrCAvmyMZ/3O0I6+0D9/Pkas=\");\n_c = Generator;\nexport default Generator;\nvar _c;\n$RefreshReg$(_c, \"Generator\");","map":{"version":3,"names":["React","useState","useEffect","Image","Pattern","Generator","advice","setAdvice","adviceNumber","setAdviceNumber","fetchAdvice","response","fetch","data","json","slip","handleClick","randomAdviceId","Math","floor","random"],"sources":["/Users/julieserafini/Desktop/advice-generator/src/components/Generator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Image from '../images/icon-dice.svg';\nimport Pattern from '../images/pattern-divider-mobile.svg'\n\nconst Generator = () => {\n    const [advice, setAdvice] = useState(\"\");\n    const [adviceNumber, setAdviceNumber] = useState(0);\n\n    const fetchAdvice = async () => {\n        const response = await fetch(`https://api.adviceslip.com/advice/${adviceNumber}`);\n        const data = await response.json();\n        setAdvice(data.slip.advice);\n        \n    }\n\n    useEffect(()=> {\n        fetchAdvice();\n\n    }, [adviceNumber, fetchAdvice] )\n\n    useEffect(() => {\n        fetchAdvice();\n    }, []);\n\n   \n\n    const handleClick = async () => {\n        const randomAdviceId = Math.floor(Math.random() * 401) + 1;\n        setAdviceNumber(randomAdviceId);\n\n    }\n\n    return (\n        <div id=\"advice-box\">\n            <h1>advice #{adviceNumber}</h1>\n            <p id=\"text\">{advice}</p>\n            <img id=\"pattern\" src={Pattern} alt=\"Pattern Divider\"/>\n            <button type=\"button\" id=\"btn\" onClick={handleClick}><img id=\"dice\" src={Image} alt=\"Icon Dice\"/></button>\n        </div>\n    )\n}\n\nexport default Generator\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,OAAO,MAAM,sCAAsC;AAAA;AAE1D,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMS,WAAW,GAAG,YAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCJ,YAAa,EAAC,CAAC;IACjF,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCP,SAAS,CAACM,IAAI,CAACE,IAAI,CAACT,MAAM,CAAC;EAE/B,CAAC;EAEDJ,SAAS,CAAC,MAAK;IACXQ,WAAW,EAAE;EAEjB,CAAC,EAAE,CAACF,YAAY,EAAEE,WAAW,CAAC,CAAE;EAEhCR,SAAS,CAAC,MAAM;IACZQ,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMM,WAAW,GAAG,YAAY;IAC5B,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC;IAC1DX,eAAe,CAACQ,cAAc,CAAC;EAEnC,CAAC;EAED,oBACI;IAAK,EAAE,EAAC,YAAY;IAAA,wBAChB;MAAA,WAAI,UAAQ,EAACT,YAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAC/B;MAAG,EAAE,EAAC,MAAM;MAAA,UAAEF;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eACzB;MAAK,EAAE,EAAC,SAAS;MAAC,GAAG,EAAEF,OAAQ;MAAC,GAAG,EAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAE,eACvD;MAAQ,IAAI,EAAC,QAAQ;MAAC,EAAE,EAAC,KAAK;MAAC,OAAO,EAAEY,WAAY;MAAA,uBAAC;QAAK,EAAE,EAAC,MAAM;QAAC,GAAG,EAAEb,KAAM;QAAC,GAAG,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACxG;AAEd,CAAC;AAAA,GApCKE,SAAS;AAAA,KAATA,SAAS;AAsCf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}